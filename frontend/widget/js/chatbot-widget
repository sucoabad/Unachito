(function () {
    const API_BASE = 'http://localhost:8000/api/chatbot';  // Cambia esto en producci√≥n
    let estadoFlujo = null;
    let datosReset = {};

    const chatbotButton = document.getElementById("chatbot-button");
    const chatbotPopup = document.getElementById("chatbot-popup");
    const sendButton = document.getElementById("send-button");
    const userInput = document.getElementById("user-input");

    if (!chatbotButton || !chatbotPopup || !sendButton || !userInput) {
        console.error("‚ö†Ô∏è No se encontraron los elementos del chatbot. Revisa la integraci√≥n.");
        return;
    }

    // Mostrar/ocultar el popup
    chatbotButton.addEventListener("click", () => {
        chatbotPopup.classList.toggle("hidden");
    });

    // Escuchar env√≠os por bot√≥n y Enter
    sendButton.addEventListener("click", handleUserInput);
    userInput.addEventListener("keypress", (e) => {
        if (e.key === "Enter") {
            handleUserInput();
        }
    });

    function handleUserInput() {
        const userInputValue = userInput.value.trim();
        if (userInputValue === '') return;

        appendMessage("T√∫", userInputValue);
        userInput.value = "";

        console.log("[FLUJO] Estado actual:", estadoFlujo);

        const mensajeEnMinusculas = userInputValue.toLowerCase();

        // üü° Detectar saludo si a√∫n no hay nombre
        const saludos = ['hola', 'buenos d√≠as', 'buenas tardes', 'buenas noches', 'saludos'];
        if (saludos.includes(mensajeEnMinusculas) && !userName) {
            appendMessage("Chatbot", "¬°Hola! üòä ¬øCu√°l es tu nombre para poder ayudarte mejor?");
            return;
        }

        // üß† Detectar y guardar nombre si no est√° definido
        if (!userName) {
            const posibleNombre = extraerNombre(userInputValue);
            if (posibleNombre) {
                userName = posibleNombre;
                appendMessage("Chatbot", `¬°Mucho gusto, ${userName}! üòä ¬øEn qu√© puedo ayudarte hoy?`);
                return;
            }
        }

        // üîÅ Flujo de recuperaci√≥n de contrase√±a
        if (estadoFlujo === 'esperando_cedula') {
            manejarCedula(userInputValue);
        } else if (estadoFlujo === 'esperando_otp') {
            manejarOtp(userInputValue);
        } else if (estadoFlujo === 'esperando_nueva_contrasena') {
            manejarNuevaContrasena(userInputValue);
        } else {
            fetchChatbotResponse(userInputValue);
        }
    }



    function extraerNombre(texto) {
        const regexes = [
            /me llamo\s+([A-Za-z√Å√â√ç√ì√ö√°√©√≠√≥√∫√±√ë]+)/i,
            /soy\s+([A-Za-z√Å√â√ç√ì√ö√°√©√≠√≥√∫√±√ë]+)/i,
            /mi nombre es\s+([A-Za-z√Å√â√ç√ì√ö√°√©√≠√≥√∫√±√ë]+)/i
        ];
        for (const regex of regexes) {
            const match = texto.match(regex);
            if (match) return capitalizar(match[1]);
        }

        // Si solo es una palabra, sin s√≠mbolos ni espacios, asumir como nombre
        const palabras = texto.trim().split(/\s+/);
        if (palabras.length === 1 && /^[A-Za-z√Å√â√ç√ì√ö√°√©√≠√≥√∫√±√ë]+$/.test(palabras[0])) {
            return capitalizar(palabras[0]);
        }

        return null;
    }

    function capitalizar(nombre) {
        return nombre.charAt(0).toUpperCase() + nombre.slice(1).toLowerCase();
    }



    function manejarCedula(cedula) {
        datosReset.cedula = cedula;
        appendMessage("Chatbot", `${userName ? `üòä ${userName}, ` : ''}enviando el c√≥digo OTP a tu correo institucional... üîÑ`);

        fetch(`${API_BASE}/enviar_otp`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ cedula: datosReset.cedula })
        })
            .then(r => r.json())
            .then(data => {
                if (data.status === 'success') {
                    appendMessage("Chatbot", `‚úÖ ${userName ? `${userName}, ` : ''}${data.message} Por favor ingresa el c√≥digo OTP recibido.`);
                    estadoFlujo = 'esperando_otp';
                } else {
                    appendMessage("Chatbot", `‚ùó Error: ${data.detail || 'Hubo un problema al enviar el OTP.'}`);
                    estadoFlujo = null;
                }
            })
            .catch(error => {
                console.error("[ERROR] Enviando OTP:", error);
                appendMessage("Chatbot", "‚ùó Error de conexi√≥n al enviar el OTP.");
                estadoFlujo = null;
            });
    }

    function manejarOtp(otp) {
        datosReset.otp = otp;
        appendMessage("Chatbot", "Verificando el c√≥digo OTP... üîÑ");

        fetch(`${API_BASE}/verificar_otp`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ cedula: datosReset.cedula, otp: datosReset.otp })
        })
            .then(r => r.json())
            .then(data => {
                if (data.status === 'success') {
                    appendMessage("Chatbot", `‚úÖ ${userName ? `${userName}, ` : ''}OTP verificado. Por favor ingresa tu nueva contrase√±a.`);
                    estadoFlujo = 'esperando_nueva_contrasena';
                } else {
                    appendMessage("Chatbot", `‚ùó Error: ${data.detail || 'OTP incorrecto o expirado.'}`);
                    estadoFlujo = null;
                }
            })
            .catch(error => {
                console.error("[ERROR] Verificando OTP:", error);
                appendMessage("Chatbot", "‚ùó Error de conexi√≥n al verificar el OTP.");
                estadoFlujo = null;
            });
    }

    function manejarNuevaContrasena(nuevaContrasena) {
        datosReset.new_password = nuevaContrasena;
        appendMessage("Chatbot", "Actualizando tu contrase√±a... üîÑ");

        fetch(`${API_BASE}/reset_radius_password`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                username: datosReset.cedula,
                confirm_data: datosReset.otp,
                new_password: datosReset.new_password,
                grupo: datosReset.grupo || 'estudiantes'
            })
        })
            .then(r => r.json())
            .then(data => {
                if (data.status === 'success') {
                    appendMessage("Chatbot", `‚úÖ ¬°Listo${userName ? `, ${userName}` : ''}! ${data.message}`);
                } else {
                    appendMessage("Chatbot", `‚ùó Error: ${data.detail || 'No se pudo cambiar la contrase√±a.'}`);
                }
            })
            .catch(error => {
                console.error("[ERROR] Cambiando contrase√±a:", error);
                appendMessage("Chatbot", "‚ùó Error de conexi√≥n. Intenta nuevamente m√°s tarde.");
            })
            .finally(() => {
                estadoFlujo = null;
                datosReset = {};
            });
    }

    function appendMessage(sender, text, extraHTML = '') {
        const msgContainer = document.getElementById("chatbot-messages");
        const msg = document.createElement("div");
        msg.classList.add('message');
        msg.classList.add(sender === "T√∫" ? 'user' : 'bot');
        msg.innerHTML = `<div><strong>${sender}:</strong> ${text}</div>${extraHTML}`;
        msgContainer.appendChild(msg);
        msgContainer.scrollTop = msgContainer.scrollHeight;
    }

    document.addEventListener("click", function (event) {
        const button = event.target.closest(".option-btn");
        if (button) {
            const opcion = button.getAttribute("data-option");
            console.log("[DEBUG] Bot√≥n clickeado:", opcion);

            if (opcion === 'wifi') {
                const botonesHTML = `
                    <div class="bot-options" style="margin-top: 10px;">
                        <button class="option-btn grupo-estudiante" data-option="grupo-estudiante">‚úÖ S√≠, soy estudiante</button>
                        <button class="option-btn grupo-docente" data-option="grupo-docente">‚ùå No, soy docente/administrativo</button>
                    </div>
                `;
                appendMessage("Chatbot", "¬øEres estudiante? Por favor selecciona una opci√≥n:", botonesHTML);

            } else if (opcion === 'grupo-estudiante') {
                appendMessage("Chatbot", "‚úÖ Has seleccionado *Estudiante*. Por favor ingresa tu c√©dula para enviar el c√≥digo OTP.");
                datosReset.grupo = 'estudiantes';
                estadoFlujo = 'esperando_cedula';

            } else if (opcion === 'grupo-docente') {
                appendMessage("Chatbot", "‚úÖ Has seleccionado *Docente/Administrativo*. Por favor ingresa tu c√©dula para enviar el c√≥digo OTP.");
                datosReset.grupo = 'docentes';
                estadoFlujo = 'esperando_cedula';

            } else if (opcion === 'office365') {
                appendMessage("Chatbot", "Entendido ‚úÖ. Este m√≥dulo estar√° disponible pronto üöß.");

            } else if (opcion === 'moodle') {
                appendMessage("Chatbot", "Para cambiar la contrase√±a de Moodle, accede al portal Moodle y usa la opci√≥n '¬øOlvidaste tu contrase√±a?'.");

            } else if (opcion === 'zoom') {
                appendMessage("Chatbot", "Para cambiar la contrase√±a de Zoom, visita zoom.us y usa la opci√≥n de restablecimiento.");
            }
        }
    });

    function fetchChatbotResponse(question) {
        fetch(`${API_BASE}/query`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ pregunta: question })
        })
            .then(r => r.json())
            .then(data => {
                let respuesta = data.respuesta || 'Lo siento, hubo un problema al obtener la respuesta.';
                let fuente = data.fuente ? `<br><small>üîé Fuente: ${data.fuente}</small>` : '';

                let botonesHTML = '';
                if (data.acciones && Array.isArray(data.acciones) && data.acciones.length > 0) {
                    botonesHTML += `<div class="bot-options" style="margin-top: 10px;">`;
                    data.acciones.forEach(action => {
                        botonesHTML += `<button class="option-btn ${action}" data-option="${action}">${action}</button>`;
                    });
                    botonesHTML += `</div>`;
                }

                appendMessage("Chatbot", `${respuesta}${fuente}`, botonesHTML);
            })
            .catch(error => {
                console.error("[ERROR] Fetch chatbot:", error);
                appendMessage("Chatbot", "Ocurri√≥ un error. Int√©ntalo m√°s tarde.");
            });
    }
})();
